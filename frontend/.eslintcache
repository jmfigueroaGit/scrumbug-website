[{"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\index.js":"1","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\App.js":"2","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\reportWebVitals.js":"3","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\Header.js":"4","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\Footer.js":"5","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\LoginScreen.js":"6","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\actions\\userAction.js":"7","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\constants\\userConstant.js":"8","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\store.js":"9","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\reducers\\userReducer.js":"10","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\RegisterScreens\\RegisterScreen.js":"11","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\Message.js":"12","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\RegisterScreens\\SecurityQuestion1.js":"13","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\RegisterScreens\\SecurityQuestion2.js":"14","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\RegisterScreens\\SecurityQuestion3.js":"15","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\controls\\Control.js":"16","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\controls\\Input.js":"17","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\controls\\Select.js":"18","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\controls\\Button.js":"19","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\ForgotPasswordScreens\\AuthEmail.js":"20","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\ForgotPasswordScreens\\Authentication_1.js":"21","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\ForgotPasswordScreens\\Authentication_2.js":"22","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\ForgotPasswordScreens\\Authentication_3.js":"23","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\Loader.js":"24","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\HomeScreen.js":"25","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Admin.js":"26","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Users\\UserListScreen.js":"27","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Users\\UserEditScreen.js":"28","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\reducers\\movieReducer.js":"29","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\constants\\movieConstant.js":"30","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Movie\\MovieListScreen.js":"31","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\actions\\movieAction.js":"32","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Movie\\AddMovie\\MovieAddScreen.js":"33","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Movie\\AddMovie\\CinemaDetailScreen.js":"34","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Movie\\AddMovie\\MovieEditScreen.js":"35","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Movie\\AddMovie\\MovieAddPoster.js":"36","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\Default.js":"37","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\ForgotPasswordScreens\\ChangePassword.js":"38","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\MovieScreen.js":"39","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\Rating.js":"40"},{"size":621,"mtime":1609828586596,"results":"41","hashOfConfig":"42"},{"size":4244,"mtime":1610271380429,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":12467,"mtime":1610281798350,"results":"45","hashOfConfig":"42"},{"size":466,"mtime":1609776122231,"results":"46","hashOfConfig":"42"},{"size":6931,"mtime":1609953944250,"results":"47","hashOfConfig":"42"},{"size":14165,"mtime":1610369786325,"results":"48","hashOfConfig":"42"},{"size":2864,"mtime":1610075453649,"results":"49","hashOfConfig":"42"},{"size":2104,"mtime":1610369724008,"results":"50","hashOfConfig":"42"},{"size":6917,"mtime":1610075507827,"results":"51","hashOfConfig":"42"},{"size":9642,"mtime":1610075750460,"results":"52","hashOfConfig":"42"},{"size":587,"mtime":1609853241081,"results":"53","hashOfConfig":"42"},{"size":8550,"mtime":1609909040245,"results":"54","hashOfConfig":"42"},{"size":8795,"mtime":1609909033768,"results":"55","hashOfConfig":"42"},{"size":9272,"mtime":1609909234628,"results":"56","hashOfConfig":"42"},{"size":184,"mtime":1609860236021,"results":"57","hashOfConfig":"42"},{"size":601,"mtime":1609860236036,"results":"58","hashOfConfig":"42"},{"size":1049,"mtime":1609862155220,"results":"59","hashOfConfig":"42"},{"size":865,"mtime":1609860236006,"results":"60","hashOfConfig":"42"},{"size":4660,"mtime":1609904766818,"results":"61","hashOfConfig":"42"},{"size":5805,"mtime":1609905350396,"results":"62","hashOfConfig":"42"},{"size":5793,"mtime":1609905731215,"results":"63","hashOfConfig":"42"},{"size":5798,"mtime":1609906565281,"results":"64","hashOfConfig":"42"},{"size":574,"mtime":1609908471072,"results":"65","hashOfConfig":"42"},{"size":15400,"mtime":1610373751644,"results":"66","hashOfConfig":"42"},{"size":7138,"mtime":1610373396944,"results":"67","hashOfConfig":"42"},{"size":8374,"mtime":1610373212854,"results":"68","hashOfConfig":"42"},{"size":6812,"mtime":1609948446381,"results":"69","hashOfConfig":"42"},{"size":4943,"mtime":1610370007938,"results":"70","hashOfConfig":"42"},{"size":2208,"mtime":1610369555172,"results":"71","hashOfConfig":"42"},{"size":7720,"mtime":1610355734994,"results":"72","hashOfConfig":"42"},{"size":10788,"mtime":1610382030970,"results":"73","hashOfConfig":"42"},{"size":15579,"mtime":1610278491185,"results":"74","hashOfConfig":"42"},{"size":18010,"mtime":1610080304619,"results":"75","hashOfConfig":"42"},{"size":16167,"mtime":1610256631477,"results":"76","hashOfConfig":"42"},{"size":13215,"mtime":1610035398462,"results":"77","hashOfConfig":"42"},{"size":1117,"mtime":1610271431570,"results":"78","hashOfConfig":"42"},{"size":7176,"mtime":1610075187293,"results":"79","hashOfConfig":"42"},{"size":149583,"mtime":1610434862851,"results":"80","hashOfConfig":"42"},{"size":2363,"mtime":1610278446095,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1g1i5km",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\index.js",[],["176","177"],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\App.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\reportWebVitals.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\Header.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\Footer.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\actions\\userAction.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\constants\\userConstant.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\store.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\reducers\\userReducer.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\RegisterScreens\\RegisterScreen.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\Message.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\RegisterScreens\\SecurityQuestion1.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\RegisterScreens\\SecurityQuestion2.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\RegisterScreens\\SecurityQuestion3.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\controls\\Control.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\controls\\Input.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\controls\\Select.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\controls\\Button.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\ForgotPasswordScreens\\AuthEmail.js",["178"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    Image,\r\n    OverlayTrigger,\r\n    Row,\r\n    Tooltip,\r\n} from 'react-bootstrap';\r\nimport { findUserAuth } from '../../actions/userAction';\r\nconst AuthEmail = () => {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userEmailAuth = useSelector((state) => state.userEmailAuth);\r\n    const { loading, error, user } = userEmailAuth;\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push('/recover-v1');\r\n        }\r\n    }, [history, user]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (email.length === 0) {\r\n            setMessage('Please fill in required fields');\r\n        } else {\r\n            dispatch(findUserAuth(email));\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Container className='login-form'>\r\n                <Row className='row-login'>\r\n                    <Col sm={5} className='col-1-login'>\r\n                        <div className='d-flex flex-column login-col-1'>\r\n                            <Image\r\n                                src='/images/logo.png'\r\n                                className='login-logo'\r\n                            />\r\n                            <span className='col-info'>\r\n                                Enter your personal details and start journey\r\n                                with us\r\n                            </span>\r\n                            <Link to='/register' className='button-style'>\r\n                                <span className='col-button'>Register</span>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm={7} className='col-2-login pt-5'>\r\n                        <div>\r\n                            {message && (\r\n                                <div className='message-box'>\r\n                                    <Message>{message}</Message>\r\n                                </div>\r\n                            )}\r\n                            {error && (\r\n                                <div className='message-box'>\r\n                                    <Message variant='danger'>{error}</Message>\r\n                                </div>\r\n                            )}\r\n                            <Form className='form-holder'>\r\n                                <Form.Group controlId='formBasicEmail'>\r\n                                    <Form.Label className='form-label'>\r\n                                        Email address\r\n                                    </Form.Label>\r\n                                    <OverlayTrigger\r\n                                        key='bottom'\r\n                                        placement='bottom'\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-$'bottom'`}>\r\n                                                This field is required.\r\n                                            </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <Form.Control\r\n                                            type='email'\r\n                                            placeholder='Enter email'\r\n                                            className='form-control'\r\n                                            value={email}\r\n                                            onChange={(e) =>\r\n                                                setEmail(e.target.value)\r\n                                            }\r\n                                        />\r\n                                    </OverlayTrigger>\r\n                                </Form.Group>\r\n\r\n                                <Button\r\n                                    variant='primary'\r\n                                    type='submit'\r\n                                    className='form-submit'\r\n                                    onClick={submitHandler}\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthEmail;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\ForgotPasswordScreens\\Authentication_1.js",["179"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    Image,\r\n    OverlayTrigger,\r\n    Row,\r\n    Tooltip,\r\n} from 'react-bootstrap';\r\nimport { useHistory, Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authQuestion_1 } from '../../actions/userAction';\r\nimport Message from '../../components/Message';\r\n\r\nconst Authentication1 = ({ location }) => {\r\n    const history = useHistory();\r\n    const [answer, setAnswer] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const userEmailAuth = useSelector((state) => state.userEmailAuth);\r\n    const { user } = userEmailAuth;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userAuthentication = useSelector(\r\n        (state) => state.userAuthentication_v1\r\n    );\r\n    const { loading, error, authentication_v1 } = userAuthentication;\r\n\r\n    useEffect(() => {\r\n        if (authentication_v1) {\r\n            history.push('/recover-v2');\r\n        }\r\n    }, [history, authentication_v1]);\r\n\r\n    const handleInput = (e) => {\r\n        e.preventDefault();\r\n        if (answer.length === 0) {\r\n            setMessage('Please fill in required fields');\r\n        } else {\r\n            dispatch(authQuestion_1(user.email, answer));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Container className='login-form'>\r\n                <Row className='row-login'>\r\n                    <Col sm={5} className='col-1-login'>\r\n                        <div className='d-flex flex-column login-col-1'>\r\n                            <Image\r\n                                src='/images/logo.png'\r\n                                className='login-logo'\r\n                            />\r\n                            <span className='col-info'>\r\n                                Enter your personal details and start journey\r\n                                with us\r\n                            </span>\r\n                            <Link to='/register' className='button-style'>\r\n                                <span className='col-button'>Register</span>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm={7} className='col-2-login pt-4'>\r\n                        <div>\r\n                            {' '}\r\n                            {message && (\r\n                                <div className='message-box'>\r\n                                    <Message>{message}</Message>\r\n                                </div>\r\n                            )}\r\n                            {error && (\r\n                                <div className='message-box'>\r\n                                    <Message variant='danger'>{error}</Message>\r\n                                </div>\r\n                            )}\r\n                            {user ? (\r\n                                <Form className='form-holder'>\r\n                                    <Form.Group>\r\n                                        <Form.Label className='form-label'>\r\n                                            Security Question\r\n                                        </Form.Label>\r\n                                        <div className='security-question'>\r\n                                            <h5>{user.question1}</h5>\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label className='form-label'>\r\n                                            Answer\r\n                                        </Form.Label>\r\n                                        <OverlayTrigger\r\n                                            key='bottom'\r\n                                            placement='bottom'\r\n                                            overlay={\r\n                                                <Tooltip\r\n                                                    id={`tooltip-$'bottom'`}\r\n                                                >\r\n                                                    This field is required.\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <Form.Control\r\n                                                type='text'\r\n                                                placeholder='Enter Answer'\r\n                                                className='form-control'\r\n                                                value={answer}\r\n                                                onChange={(e) =>\r\n                                                    setAnswer(e.target.value)\r\n                                                }\r\n                                            />\r\n                                        </OverlayTrigger>\r\n                                    </Form.Group>\r\n\r\n                                    <Button\r\n                                        variant='primary'\r\n                                        type='submit'\r\n                                        className='form-submit'\r\n                                        onClick={handleInput}\r\n                                    >\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form>\r\n                            ) : (\r\n                                <Redirect to='/login'></Redirect>\r\n                            )}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Authentication1;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\ForgotPasswordScreens\\Authentication_2.js",["180"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    Image,\r\n    OverlayTrigger,\r\n    Row,\r\n    Tooltip,\r\n} from 'react-bootstrap';\r\nimport { useHistory, Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { authQuestion_2 } from '../../actions/userAction';\r\nimport Message from '../../components/Message';\r\n\r\nconst Authentication2 = () => {\r\n    const history = useHistory();\r\n    const [answer, setAnswer] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const userEmailAuth = useSelector((state) => state.userEmailAuth);\r\n    const { user } = userEmailAuth;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userAuthentication = useSelector(\r\n        (state) => state.userAuthentication_v2\r\n    );\r\n    const { loading, error, authentication_v2 } = userAuthentication;\r\n\r\n    useEffect(() => {\r\n        if (authentication_v2) {\r\n            history.push('/recover-v3');\r\n        }\r\n    }, [history, authentication_v2]);\r\n    const handleInput = (e) => {\r\n        e.preventDefault();\r\n        if (answer.length === 0) {\r\n            setMessage('Please fill in required fields');\r\n        } else {\r\n            dispatch(authQuestion_2(user.email, answer));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Container className='login-form'>\r\n                <Row className='row-login'>\r\n                    <Col sm={5} className='col-1-login'>\r\n                        <div className='d-flex flex-column login-col-1'>\r\n                            <Image\r\n                                src='/images/logo.png'\r\n                                className='login-logo'\r\n                            />\r\n                            <span className='col-info'>\r\n                                Enter your personal details and start journey\r\n                                with us\r\n                            </span>\r\n                            <Link to='/register' className='button-style'>\r\n                                <span className='col-button'>Register</span>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm={7} className='col-2-login pt-4'>\r\n                        <div>\r\n                            {' '}\r\n                            {message && (\r\n                                <div className='message-box'>\r\n                                    <Message>{message}</Message>\r\n                                </div>\r\n                            )}\r\n                            {error && (\r\n                                <div className='message-box'>\r\n                                    <Message variant='danger'>{error}</Message>\r\n                                </div>\r\n                            )}\r\n                            {user ? (\r\n                                <Form className='form-holder'>\r\n                                    <Form.Group>\r\n                                        <Form.Label className='form-label'>\r\n                                            Security Question\r\n                                        </Form.Label>\r\n                                        <div className='security-question'>\r\n                                            <h5>{user.question2}</h5>\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label className='form-label'>\r\n                                            Answer\r\n                                        </Form.Label>\r\n                                        <OverlayTrigger\r\n                                            key='bottom'\r\n                                            placement='bottom'\r\n                                            overlay={\r\n                                                <Tooltip\r\n                                                    id={`tooltip-$'bottom'`}\r\n                                                >\r\n                                                    This field is required.\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <Form.Control\r\n                                                type='text'\r\n                                                placeholder='Enter Answer'\r\n                                                className='form-control'\r\n                                                value={answer}\r\n                                                onChange={(e) =>\r\n                                                    setAnswer(e.target.value)\r\n                                                }\r\n                                            />\r\n                                        </OverlayTrigger>\r\n                                    </Form.Group>\r\n\r\n                                    <Button\r\n                                        variant='primary'\r\n                                        type='submit'\r\n                                        className='form-submit'\r\n                                        onClick={handleInput}\r\n                                    >\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form>\r\n                            ) : (\r\n                                <Redirect to='/login'></Redirect>\r\n                            )}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Authentication2;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\ForgotPasswordScreens\\Authentication_3.js",["181"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    Image,\r\n    OverlayTrigger,\r\n    Row,\r\n    Tooltip,\r\n} from 'react-bootstrap';\r\nimport { useHistory, Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { authQuestion_3 } from '../../actions/userAction';\r\nimport Message from '../../components/Message';\r\n\r\nconst Authentication2 = () => {\r\n    const history = useHistory();\r\n    const [answer, setAnswer] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const userEmailAuth = useSelector((state) => state.userEmailAuth);\r\n    const { user } = userEmailAuth;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userAuthentication = useSelector(\r\n        (state) => state.userAuthentication_v3\r\n    );\r\n    const { loading, error, authentication_v3 } = userAuthentication;\r\n\r\n    useEffect(() => {\r\n        if (authentication_v3) {\r\n            history.push('/change-password');\r\n        }\r\n    }, [history, authentication_v3]);\r\n    const handleInput = (e) => {\r\n        e.preventDefault();\r\n        if (answer.length === 0) {\r\n            setMessage('Please fill in required fields');\r\n        } else {\r\n            dispatch(authQuestion_3(user.email, answer));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Container className='login-form'>\r\n                <Row className='row-login'>\r\n                    <Col sm={5} className='col-1-login'>\r\n                        <div className='d-flex flex-column login-col-1'>\r\n                            <Image\r\n                                src='/images/logo.png'\r\n                                className='login-logo'\r\n                            />\r\n                            <span className='col-info'>\r\n                                Enter your personal details and start journey\r\n                                with us\r\n                            </span>\r\n                            <Link to='/register' className='button-style'>\r\n                                <span className='col-button'>Register</span>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm={7} className='col-2-login pt-4'>\r\n                        <div>\r\n                            {' '}\r\n                            {message && (\r\n                                <div className='message-box'>\r\n                                    <Message>{message}</Message>\r\n                                </div>\r\n                            )}\r\n                            {error && (\r\n                                <div className='message-box'>\r\n                                    <Message variant='danger'>{error}</Message>\r\n                                </div>\r\n                            )}\r\n                            {user ? (\r\n                                <Form className='form-holder'>\r\n                                    <Form.Group>\r\n                                        <Form.Label className='form-label'>\r\n                                            Security Question\r\n                                        </Form.Label>\r\n                                        <div className='security-question'>\r\n                                            <h5>{user.question3}</h5>\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label className='form-label'>\r\n                                            Answer\r\n                                        </Form.Label>\r\n                                        <OverlayTrigger\r\n                                            key='bottom'\r\n                                            placement='bottom'\r\n                                            overlay={\r\n                                                <Tooltip\r\n                                                    id={`tooltip-$'bottom'`}\r\n                                                >\r\n                                                    This field is required.\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <Form.Control\r\n                                                type='text'\r\n                                                placeholder='Enter Answer'\r\n                                                className='form-control'\r\n                                                value={answer}\r\n                                                onChange={(e) =>\r\n                                                    setAnswer(e.target.value)\r\n                                                }\r\n                                            />\r\n                                        </OverlayTrigger>\r\n                                    </Form.Group>\r\n\r\n                                    <Button\r\n                                        variant='primary'\r\n                                        type='submit'\r\n                                        className='form-submit'\r\n                                        onClick={handleInput}\r\n                                    >\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form>\r\n                            ) : (\r\n                                <Redirect to='/login'></Redirect>\r\n                            )}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Authentication2;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\Loader.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\HomeScreen.js",["182","183","184","185"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Carousel, Col, Container, Row, Card } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    getMovieDetails,\r\n    getSeatDetails,\r\n    listMovies,\r\n} from '../actions/movieAction';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nconst HomeScreen = () => {\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const movieList = useSelector((state) => state.movieList);\r\n    const { loading, error, moviesList } = movieList;\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            dispatch(listMovies());\r\n        }\r\n    }, [dispatch, userInfo]);\r\n\r\n    const movieScreen = (id) => {\r\n        dispatch(getMovieDetails(id));\r\n        dispatch(getSeatDetails(id));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {userInfo ? (\r\n                <div>\r\n                    {movieList ? (\r\n                        <Container fluid>\r\n                            {loading && <Loader>Loading</Loader>}\r\n                            <Carousel>\r\n                                {moviesList?.map((movie) => (\r\n                                    <Carousel.Item\r\n                                        interval={2500}\r\n                                        key={movie._id}\r\n                                    >\r\n                                        <div>\r\n                                            <img\r\n                                                className='image-slider'\r\n                                                src={movie.banner}\r\n                                                alt='First slide'\r\n                                            />\r\n                                            <img\r\n                                                className=' image-slider-overlay'\r\n                                                alt='First slide'\r\n                                                src='/images/black.jpg'\r\n                                            />\r\n                                        </div>\r\n                                        <Carousel.Caption className='slider-caption'>\r\n                                            <h5>\r\n                                                Duration: {movie.duration}{' '}\r\n                                                minutes\r\n                                            </h5>\r\n                                            <Row>\r\n                                                <Col xs={3} className='review'>\r\n                                                    <h5>\r\n                                                        <i className='fas fa-star' />\r\n                                                        {movie.rating}\r\n                                                    </h5>\r\n                                                </Col>\r\n                                                <Col xs={3} className='rating'>\r\n                                                    <h5>\r\n                                                        <i\r\n                                                            className='fa fa-film'\r\n                                                            aria-hidden='true'\r\n                                                        />{' '}\r\n                                                        {movie.language}\r\n                                                    </h5>\r\n                                                </Col>\r\n                                                <Col xs={6} className='rating'>\r\n                                                    <h5>{movie.genre}</h5>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <div className='movie-title'>\r\n                                                <h1>{movie.movieTitle}</h1>\r\n                                                <p>{movie.movieSynopsis}</p>\r\n                                            </div>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/movie-screen/${movie._id}`}\r\n                                                    >\r\n                                                        <Button\r\n                                                            className='buy-ticket'\r\n                                                            onClick={() =>\r\n                                                                movieScreen(\r\n                                                                    movie._id\r\n                                                                )\r\n                                                            }\r\n                                                        >\r\n                                                            <i\r\n                                                                className='fas fa-ticket-alt '\r\n                                                                style={{\r\n                                                                    padding:\r\n                                                                        '5px',\r\n                                                                }}\r\n                                                            />\r\n                                                            Book a Ticket\r\n                                                        </Button>\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Button className='wishlist'>\r\n                                                        <i className='fas fa-grin-stars' />\r\n                                                        Watch Trailer\r\n                                                    </Button>\r\n                                                </Col>\r\n                                                <Col></Col>\r\n                                            </Row>\r\n                                        </Carousel.Caption>\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                            <Col>\r\n                                <Row className='row-movie'>\r\n                                    <span>\r\n                                        <i className='fas fa-film mr-2'></i>\r\n                                        Now Showing\r\n                                    </span>\r\n                                </Row>\r\n\r\n                                <Row className='py-3'>\r\n                                    {moviesList?.map((movie) => (\r\n                                        <div key={movie._id}>\r\n                                            {movie.status === 'now-showing' ? (\r\n                                                <Col xs={2} className='mr-1'>\r\n                                                    <Card className='card-movie'>\r\n                                                        <Card.Img\r\n                                                            variant='top'\r\n                                                            src={movie.poster}\r\n                                                            className='card-image'\r\n                                                        />\r\n                                                        <div className='image-hover'>\r\n                                                            <div className='hover-content'>\r\n                                                                <Link\r\n                                                                    to={`/movie-screen/${movie._id}`}\r\n                                                                >\r\n                                                                    <Button\r\n                                                                        className='hover-button'\r\n                                                                        onClick={() =>\r\n                                                                            movieScreen(\r\n                                                                                movie._id\r\n                                                                            )\r\n                                                                        }\r\n                                                                    >\r\n                                                                        Book a\r\n                                                                        ticket\r\n                                                                    </Button>\r\n                                                                </Link>\r\n                                                                <Button className='hover-button'>\r\n                                                                    Watch\r\n                                                                    Trailer\r\n                                                                </Button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <Card.Body className='card-body'>\r\n                                                            <Card.Title className='card-title'>\r\n                                                                {\r\n                                                                    movie.movieTitle\r\n                                                                }\r\n                                                            </Card.Title>\r\n                                                            <Card.Text className='card-text'>\r\n                                                                {movie.genre}\r\n                                                            </Card.Text>\r\n                                                        </Card.Body>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            ) : (\r\n                                                <span></span>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n                                </Row>\r\n                                <Row className='row-movie'>\r\n                                    <span>\r\n                                        <i className='fas fa-film mr-2'></i>\r\n                                        Coming Soon\r\n                                    </span>\r\n                                </Row>\r\n\r\n                                <Row className='py-3 pb-5'>\r\n                                    {moviesList?.map((movie) => (\r\n                                        <div key={movie._id}>\r\n                                            {movie.status === 'coming-soon' ? (\r\n                                                <Col xs={2} className='mr-1'>\r\n                                                    <Card className='card-movie'>\r\n                                                        <Card.Img\r\n                                                            variant='top'\r\n                                                            src={movie.poster}\r\n                                                            className='card-image'\r\n                                                        />\r\n                                                        <div className='image-hover'>\r\n                                                            <div className='hover-content'>\r\n                                                                <Link\r\n                                                                    to={`/movie-screen/${movie._id}`}\r\n                                                                >\r\n                                                                    <Button\r\n                                                                        className='hover-button'\r\n                                                                        onClick={() =>\r\n                                                                            movieScreen(\r\n                                                                                movie._id\r\n                                                                            )\r\n                                                                        }\r\n                                                                    >\r\n                                                                        Book a\r\n                                                                        ticket\r\n                                                                    </Button>\r\n                                                                </Link>\r\n                                                                <Button className='hover-button'>\r\n                                                                    Watch\r\n                                                                    Trailer\r\n                                                                </Button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <Card.Body className='card-body'>\r\n                                                            <Card.Title className='card-title'>\r\n                                                                {\r\n                                                                    movie.movieTitle\r\n                                                                }\r\n                                                            </Card.Title>\r\n                                                            <Card.Text className='card-text'>\r\n                                                                {movie.genre}\r\n                                                            </Card.Text>\r\n                                                        </Card.Body>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            ) : (\r\n                                                <span></span>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n                                </Row>\r\n                            </Col>\r\n                        </Container>\r\n                    ) : (\r\n                        <Redirect to='/home'></Redirect>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <Redirect to='/login'></Redirect>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Admin.js",["186"],"import React, { useEffect } from 'react';\r\nimport { Col, Container, ListGroup, Row } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listUsers } from '../../actions/userAction';\r\nimport { listMovies } from '../../actions/movieAction';\r\nimport Loader from '../../components/Loader';\r\nconst Admin = ({ history }) => {\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n    const dispatch = useDispatch();\r\n\r\n    const movieList = useSelector((state) => state.movieList);\r\n    const { moviesList } = movieList;\r\n\r\n    const userList = useSelector((state) => state.userList);\r\n    const { loading, error, users } = userList;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers());\r\n            dispatch(listMovies());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n    return (\r\n        <div>\r\n            {loading && <Loader>Loading</Loader>}\r\n            {userInfo ? (\r\n                <div>\r\n                    {moviesList?.map((movie) => (\r\n                        <div key={movie._id}>\r\n                            {users?.map((user) => (\r\n                                <Container\r\n                                    fluid\r\n                                    className='admin-main'\r\n                                    key={user._id}\r\n                                >\r\n                                    <Row className='h-100'>\r\n                                        <Col sm={2} className='admin-sidebar'>\r\n                                            <ListGroup\r\n                                                as='ul'\r\n                                                className='pl-1 pt-5 sidebar-content'\r\n                                            >\r\n                                                <ListGroup.Item as='li' active>\r\n                                                    <span>\r\n                                                        <i className='fas fa-clipboard' />{' '}\r\n                                                        Dashboard\r\n                                                    </span>\r\n                                                </ListGroup.Item>\r\n                                                <Link to='/userlist'>\r\n                                                    <ListGroup.Item as='li'>\r\n                                                        <span>\r\n                                                            <i className='fas fa-users' />\r\n                                                            Users\r\n                                                        </span>\r\n                                                    </ListGroup.Item>\r\n                                                </Link>\r\n                                                <Link to='/movielist'>\r\n                                                    <ListGroup.Item as='li'>\r\n                                                        <span>\r\n                                                            <i className='fas fa-film' />{' '}\r\n                                                            Movies\r\n                                                        </span>\r\n                                                    </ListGroup.Item>\r\n                                                </Link>\r\n                                                <ListGroup.Item as='li'>\r\n                                                    <span>\r\n                                                        <i className='fas fa-shopping-cart' />\r\n                                                        Bookings\r\n                                                    </span>\r\n                                                </ListGroup.Item>\r\n                                            </ListGroup>\r\n                                        </Col>\r\n                                        <Col sm={10} className='admin-main-col'>\r\n                                            <div>\r\n                                                <Row className='ml-3'>\r\n                                                    <Col className='col-1-dashboard'>\r\n                                                        <span className='d-flex flex-row dashboard-content'>\r\n                                                            <i className='fas fa-users' />\r\n                                                            <h5>\r\n                                                                {users.length}{' '}\r\n                                                                registered users\r\n                                                            </h5>\r\n                                                        </span>\r\n                                                    </Col>\r\n                                                    <Col className='col-1-dashboard'>\r\n                                                        <span className='d-flex flex-row dashboard-content'>\r\n                                                            <i className='fas fa-film' />\r\n                                                            <h5>\r\n                                                                {\r\n                                                                    moviesList.length\r\n                                                                }{' '}\r\n                                                                movies showing\r\n                                                                today\r\n                                                            </h5>\r\n                                                        </span>\r\n                                                    </Col>\r\n                                                    <Col className='col-1-dashboard'>\r\n                                                        <span className='d-flex flex-row dashboard-content'>\r\n                                                            <i className='fas fa-shopping-cart' />\r\n                                                            <h5>\r\n                                                                {' '}\r\n                                                                10 registered\r\n                                                                users\r\n                                                            </h5>\r\n                                                        </span>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <Redirect to='/login'></Redirect>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Users\\UserListScreen.js",["187","188"],"import React, { useEffect } from 'react';\r\nimport { Button, Col, Container, ListGroup, Row, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { listUsers, getUserDetails } from '../../../actions/userAction';\r\nimport Loader from '../../../components/Loader';\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector((state) => state.userList);\r\n    const { loading, error, users } = userList;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n    const editHandler = (id) => {\r\n        dispatch(getUserDetails(id));\r\n        history.push(`/user/${id}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {loading && <Loader>Loading</Loader>}\r\n            {userInfo ? (\r\n                <Container fluid className='admin-main'>\r\n                    <Row className='h-100'>\r\n                        <Col sm={2} className='admin-sidebar'>\r\n                            <ListGroup\r\n                                as='ul'\r\n                                className='pl-1 pt-5 sidebar-content'\r\n                            >\r\n                                <Link to='/admin'>\r\n                                    <ListGroup.Item as='li'>\r\n                                        <span>\r\n                                            <i className='fas fa-clipboard' />{' '}\r\n                                            Dashboard\r\n                                        </span>\r\n                                    </ListGroup.Item>\r\n                                </Link>\r\n                                <ListGroup.Item as='li' active>\r\n                                    <span>\r\n                                        <i className='fas fa-users' />\r\n                                        Users\r\n                                    </span>\r\n                                </ListGroup.Item>\r\n                                <Link to='/movielist'>\r\n                                    <ListGroup.Item as='li'>\r\n                                        <span>\r\n                                            <i className='fas fa-film' /> Movies\r\n                                        </span>\r\n                                    </ListGroup.Item>\r\n                                </Link>\r\n                                <ListGroup.Item as='li'>\r\n                                    <span>\r\n                                        <i className='fas fa-shopping-cart' />\r\n                                        Bookings\r\n                                    </span>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col sm={10} className='admin-main-col'>\r\n                            <div className='user-table mt-2 ml-4'>\r\n                                <Table\r\n                                    variant='dark'\r\n                                    striped\r\n                                    bordered\r\n                                    hover\r\n                                    className='table-sm '\r\n                                >\r\n                                    <thead>\r\n                                        <tr className='col-center'>\r\n                                            <th className='col-user-table'>\r\n                                                Active\r\n                                            </th>\r\n                                            <th>Name</th>\r\n                                            <th>Email</th>\r\n                                            <th className='col-user-table'>\r\n                                                Admin\r\n                                            </th>\r\n                                            <th className='col-user-edit'>\r\n                                                Edit Details\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {users?.map((user) => (\r\n                                            <tr\r\n                                                key={user._id}\r\n                                                className='col-center'\r\n                                            >\r\n                                                <td>\r\n                                                    {user.isActive ? (\r\n                                                        <i\r\n                                                            className='fas fa-check'\r\n                                                            style={{\r\n                                                                color: 'green',\r\n                                                            }}\r\n                                                        ></i>\r\n                                                    ) : (\r\n                                                        <i\r\n                                                            className='fas fa-times'\r\n                                                            style={{\r\n                                                                color: 'red',\r\n                                                            }}\r\n                                                        ></i>\r\n                                                    )}\r\n                                                </td>\r\n                                                <td>{user.fullName}</td>\r\n                                                <td>{user.email}</td>\r\n                                                <td>\r\n                                                    {user.isAdmin ? (\r\n                                                        <i\r\n                                                            className='fas fa-check'\r\n                                                            style={{\r\n                                                                color: 'green',\r\n                                                            }}\r\n                                                        ></i>\r\n                                                    ) : (\r\n                                                        <i\r\n                                                            className='fas fa-times'\r\n                                                            style={{\r\n                                                                color: 'red',\r\n                                                            }}\r\n                                                        ></i>\r\n                                                    )}\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div\r\n                                                        className='user-edit'\r\n                                                        onClick={() =>\r\n                                                            editHandler(\r\n                                                                user._id\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        <i className='fas fa-user-edit'></i>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            ) : (\r\n                <Redirect to='/login'></Redirect>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Users\\UserEditScreen.js",["189","190","191","192","193"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    ListGroup,\r\n    Row,\r\n    Table,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { updateUser, getUserDetails } from '../../../actions/userAction';\r\nimport Loader from '../../../components/Loader';\r\nimport {\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_RESET,\r\n} from '../../../constants/userConstant';\r\nconst UserListScreen = ({ history, match }) => {\r\n    const userId = match.params.id;\r\n\r\n    const [fullName, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = userUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            history.push('/userlist');\r\n        } else {\r\n            setName(user.fullName);\r\n            setEmail(user.email);\r\n            setIsActive(user.isActive);\r\n        }\r\n    }, [dispatch, history, userId, user, successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({ _id: userId, fullName, email, isActive }));\r\n    };\r\n\r\n    const backHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: USER_DETAILS_RESET });\r\n        history.push('/userlist');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {loading && <Loader>Loading</Loader>}\r\n            {userInfo ? (\r\n                <Container fluid className='admin-main'>\r\n                    <Row className='h-100'>\r\n                        <Col sm={2} className='admin-sidebar'>\r\n                            <ListGroup\r\n                                as='ul'\r\n                                className='pl-1 pt-5 sidebar-content'\r\n                            >\r\n                                <Link to='/admin'>\r\n                                    <ListGroup.Item as='li'>\r\n                                        <span>\r\n                                            <i className='fas fa-clipboard' />{' '}\r\n                                            Dashboard\r\n                                        </span>\r\n                                    </ListGroup.Item>\r\n                                </Link>\r\n                                <ListGroup.Item as='li' active>\r\n                                    <span>\r\n                                        <i className='fas fa-users' />\r\n                                        Users\r\n                                    </span>\r\n                                </ListGroup.Item>\r\n                                <Link to='/movielist'>\r\n                                    <ListGroup.Item as='li'>\r\n                                        <span>\r\n                                            <i className='fas fa-film' /> Movies\r\n                                        </span>\r\n                                    </ListGroup.Item>\r\n                                </Link>\r\n                                <ListGroup.Item as='li'>\r\n                                    <span>\r\n                                        <i className='fas fa-shopping-cart' />\r\n                                        Bookings\r\n                                    </span>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col sm={10} className='admin-main-col'>\r\n                            <Button\r\n                                type='submit'\r\n                                variant='primary'\r\n                                onClick={backHandler}\r\n                                className='m-1 mt-2'\r\n                            >\r\n                                Back\r\n                            </Button>\r\n                            <Form className='form-edit'>\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type='name'\r\n                                        placeholder='Enter name'\r\n                                        value={fullName}\r\n                                        onChange={(e) =>\r\n                                            setName(e.target.value)\r\n                                        }\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control\r\n                                        type='email'\r\n                                        placeholder='Enter email'\r\n                                        value={email}\r\n                                        onChange={(e) =>\r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='isactive'>\r\n                                    <Form.Check\r\n                                        type='checkbox'\r\n                                        label='Is Active'\r\n                                        checked={isActive}\r\n                                        onChange={(e) =>\r\n                                            setIsActive(e.target.checked)\r\n                                        }\r\n                                    ></Form.Check>\r\n                                </Form.Group>\r\n\r\n                                <Button\r\n                                    type='submit'\r\n                                    variant='primary'\r\n                                    onClick={submitHandler}\r\n                                >\r\n                                    Update\r\n                                </Button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            ) : (\r\n                <Redirect to='/login'></Redirect>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\reducers\\movieReducer.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\constants\\movieConstant.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Movie\\MovieListScreen.js",["194"],"import React, { useEffect } from 'react';\r\nimport { Button, Col, Container, ListGroup, Row, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {\r\n    listMovies,\r\n    deleteMovie,\r\n    getMovieDetails,\r\n} from '../../../actions/movieAction';\r\nimport Loader from '../../../components/Loader';\r\nconst MovieListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const movieList = useSelector((state) => state.movieList);\r\n    const { loading, error, moviesList } = movieList;\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listMovies());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n    const editHandler = (id) => {\r\n        dispatch(getMovieDetails(id));\r\n    };\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteMovie(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {loading && <Loader>Loading</Loader>}\r\n            {userInfo ? (\r\n                <Container fluid className='admin-main'>\r\n                    <Row className='h-100'>\r\n                        <Col sm={2} className='admin-sidebar'>\r\n                            <ListGroup\r\n                                as='ul'\r\n                                className='pl-1 pt-5 sidebar-content'\r\n                            >\r\n                                <Link to='/admin'>\r\n                                    <ListGroup.Item as='li'>\r\n                                        <span>\r\n                                            <i className='fas fa-clipboard' />{' '}\r\n                                            Dashboard\r\n                                        </span>\r\n                                    </ListGroup.Item>\r\n                                </Link>\r\n                                <Link to='/userlist'>\r\n                                    <ListGroup.Item as='li'>\r\n                                        <span>\r\n                                            <i className='fas fa-users' />\r\n                                            Users\r\n                                        </span>\r\n                                    </ListGroup.Item>\r\n                                </Link>\r\n                                <ListGroup.Item as='li' active>\r\n                                    <span>\r\n                                        <i className='fas fa-film' /> Movies\r\n                                    </span>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item as='li'>\r\n                                    <span>\r\n                                        <i className='fas fa-shopping-cart' />\r\n                                        Bookings\r\n                                    </span>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col sm={10} className='admin-main-col'>\r\n                            <div className='add-movie-btn'>\r\n                                <Link to='movie-add'>\r\n                                    <Button type='submit' variant='primary'>\r\n                                        Add Movie\r\n                                    </Button>\r\n                                </Link>\r\n                            </div>\r\n                            <div className='movie-table mt-2 ml-4'>\r\n                                <Table\r\n                                    variant='dark'\r\n                                    striped\r\n                                    bordered\r\n                                    hover\r\n                                    className='table-sm '\r\n                                >\r\n                                    <thead>\r\n                                        <tr className='col-center'>\r\n                                            <th>TITLE</th>\r\n                                            <th>GENRE</th>\r\n                                            <th>DIRECTOR</th>\r\n                                            <th>STATUS</th>\r\n                                            <th>EDIT MOVIE</th>\r\n                                            <th>DELETE MOVIE</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {moviesList?.map((movie) => (\r\n                                            <tr\r\n                                                key={movie._id}\r\n                                                className='col-center'\r\n                                            >\r\n                                                <td>{movie.movieTitle}</td>\r\n                                                <td>{movie.genre}</td>\r\n                                                <td>{movie.director}</td>\r\n                                                <td>{movie.status}</td>\r\n                                                <td>\r\n                                                    <Link\r\n                                                        to={`/movie/${movie._id}`}\r\n                                                    >\r\n                                                        <Button\r\n                                                            variant='light'\r\n                                                            className='btn-sm'\r\n                                                            onClick={() =>\r\n                                                                editHandler(\r\n                                                                    movie._id\r\n                                                                )\r\n                                                            }\r\n                                                        >\r\n                                                            <i className='fas fa-edit'></i>\r\n                                                        </Button>\r\n                                                    </Link>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <Button\r\n                                                        variant='danger'\r\n                                                        className='btn-sm'\r\n                                                        onClick={() =>\r\n                                                            deleteHandler(\r\n                                                                movie._id\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        <i className='fas fa-trash'></i>\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            ) : (\r\n                <Redirect to='/login'></Redirect>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieListScreen;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\actions\\movieAction.js",["195"],"import axios from 'axios';\r\nimport {\r\n    MOVIE_LIST_REQUEST,\r\n    MOVIE_LIST_SUCCESS,\r\n    MOVIE_LIST_FAIL,\r\n    MOVIE_ADD_REQUEST,\r\n    MOVIE_ADD_SUCCESS,\r\n    MOVIE_ADD_FAIL,\r\n    MOVIE_UPDATE_REQUEST,\r\n    MOVIE_UPDATE_SUCCESS,\r\n    MOVIE_UPDATE_FAIL,\r\n    MOVIE_DELETE_REQUEST,\r\n    MOVIE_DELETE_SUCCESS,\r\n    MOVIE_DELETE_FAIL,\r\n    MOVIE_DETAILS_REQUEST,\r\n    MOVIE_DETAILS_SUCCESS,\r\n    MOVIE_DETAILS_FAIL,\r\n    COMING_LIST_REQUEST,\r\n    COMING_LIST_SUCCESS,\r\n    COMING_LIST_FAIL,\r\n    MOVIE_UPLOAD_REQUEST,\r\n    MOVIE_UPLOAD_SUCCESS,\r\n    MOVIE_UPLOAD_FAIL,\r\n    MOVIE_SEAT_REQUEST,\r\n    MOVIE_SEAT_SUCCESS,\r\n    MOVIE_SEAT_FAIL,\r\n    MOVIE_SEAT_UPDATE_REQUEST,\r\n    MOVIE_SEAT_UPDATE_SUCCESS,\r\n    MOVIE_SEAT_UPDATE_FAIL,\r\n    MOVIE_SEAT_UPDATE_RESET,\r\n} from '../constants/movieConstant';\r\nimport { USER_LIST_RESET } from '../constants/userConstant';\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    document.location.href = '/login';\r\n    dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const listMovies = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: MOVIE_LIST_REQUEST,\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/movies`);\r\n\r\n        dispatch({\r\n            type: MOVIE_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MOVIE_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const sortedMovie = (status) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: COMING_LIST_REQUEST,\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/movies/sorted?status=${status}`);\r\n\r\n        dispatch({\r\n            type: COMING_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: COMING_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteMovie = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: MOVIE_DELETE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        await axios.delete(`/api/movies/${id}`, config);\r\n\r\n        dispatch({\r\n            type: MOVIE_DELETE_SUCCESS,\r\n        });\r\n        dispatch(listMovies());\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n        dispatch({\r\n            type: MOVIE_DELETE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const addMovie = (\r\n    movieTitle,\r\n    mainCast,\r\n    director,\r\n    language,\r\n    genre,\r\n    duration,\r\n    rating,\r\n    movieSynopsis,\r\n    releasedDate,\r\n    endScreening,\r\n    cinemaNumber,\r\n    startTime,\r\n    endTime,\r\n    status\r\n) => async (dispatch, getState, history) => {\r\n    try {\r\n        dispatch({\r\n            type: MOVIE_ADD_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            '/api/movies/add',\r\n            {\r\n                movieTitle,\r\n                mainCast,\r\n                director,\r\n                language,\r\n                genre,\r\n                duration,\r\n                rating,\r\n                movieSynopsis,\r\n                releasedDate,\r\n                endScreening,\r\n                cinemaNumber,\r\n                startTime,\r\n                endTime,\r\n                status,\r\n            },\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: MOVIE_ADD_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('movieInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MOVIE_ADD_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateMovie = (movie) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: MOVIE_UPDATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/movies/${movie._id}`,\r\n            movie,\r\n            config\r\n        );\r\n\r\n        dispatch({ type: MOVIE_UPDATE_SUCCESS });\r\n\r\n        dispatch({ type: MOVIE_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n        dispatch({\r\n            type: MOVIE_UPDATE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getMovieDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: MOVIE_DETAILS_REQUEST,\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/movies/${id}`);\r\n\r\n        dispatch({\r\n            type: MOVIE_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n        dispatch({\r\n            type: MOVIE_DETAILS_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const checkMovie = (\r\n    movieTitle,\r\n    mainCast,\r\n    director,\r\n    language,\r\n    genre,\r\n    rating,\r\n    movieSynopsis\r\n) => async (dispatch, getState, history) => {\r\n    try {\r\n        dispatch({\r\n            type: MOVIE_DETAILS_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            '/api/movies/check',\r\n            {\r\n                movieTitle,\r\n                mainCast,\r\n                director,\r\n                language,\r\n                genre,\r\n                rating,\r\n                movieSynopsis,\r\n            },\r\n            config\r\n        );\r\n        dispatch({\r\n            type: MOVIE_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MOVIE_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const uploadMoviePoster = (movie) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: MOVIE_UPLOAD_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/movies/poster/${movie._id}`,\r\n            movie,\r\n            config\r\n        );\r\n\r\n        dispatch({ type: MOVIE_UPLOAD_SUCCESS });\r\n\r\n        dispatch({ type: MOVIE_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n        dispatch({\r\n            type: MOVIE_UPLOAD_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getSeatDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: MOVIE_SEAT_REQUEST,\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/movies/seat/${id}`);\r\n\r\n        dispatch({\r\n            type: MOVIE_SEAT_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n        dispatch({\r\n            type: MOVIE_SEAT_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateSeat = (seat) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: MOVIE_SEAT_UPDATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/movies/seat/${seat.movie}`,\r\n            seat,\r\n            config\r\n        );\r\n\r\n        dispatch({ type: MOVIE_SEAT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n        dispatch({\r\n            type: MOVIE_SEAT_UPDATE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Movie\\AddMovie\\MovieAddScreen.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Movie\\AddMovie\\CinemaDetailScreen.js",["196","197"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Container, Form, ListGroup, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Message from '../../../../components/Message';\r\nimport Loader from '../../../../components/Loader';\r\nimport moment from 'moment';\r\nimport { addMovie } from '../../../../actions/movieAction';\r\nimport {\r\n    MOVIE_DETAILS_RESET,\r\n    MOVIE_UPDATE_RESET,\r\n} from '../../../../constants/movieConstant';\r\nconst CinemaDetailsScreen = ({ history }) => {\r\n    const [release, setRelease] = useState('');\r\n    const [endScreening, setEndScreening] = useState('');\r\n    const [startTime, setStartTime] = useState('');\r\n    const [endTime, setEndTime] = useState('');\r\n    const [cinemaNumber, setCinemaNumber] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n    let [duration] = useState('');\r\n    let status = '';\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const movieDetails = useSelector((state) => state.movieDetails);\r\n    const { movie } = movieDetails;\r\n\r\n    const movieAdd = useSelector((state) => state.movieAdd);\r\n    const { loading, error, movieInfo } = movieAdd;\r\n\r\n    useEffect(() => {\r\n        if (movieInfo) {\r\n            if (movieInfo._id) {\r\n                //dispatch({ type: MOVIE_DETAILS_RESET });\r\n                history.push(`/poster-add/${movieInfo._id}`);\r\n            }\r\n        }\r\n    }, [history, movieInfo, dispatch]);\r\n\r\n    const releaseDate = moment(release, 'YYYY-MM-DD').format('MM-DD-YYYY');\r\n    const endDate = moment(endScreening, 'YYYY-MM-DD').format('MM-DD-YYYY');\r\n\r\n    const movieStart = moment(startTime, 'LT');\r\n    const movieEnd = moment(endTime, 'LT');\r\n\r\n    duration = movieEnd.diff(movieStart, 'minutes');\r\n    let today = moment().add(4, 'weeks').format('YYYY-MM-DD');\r\n    let after = moment(releaseDate).isAfter(today);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            cinemaNumber.length === 0 ||\r\n            release.length === 0 ||\r\n            endScreening.length === 0 ||\r\n            startTime.length === 0 ||\r\n            endTime.length === 0\r\n        ) {\r\n            setMessage('Please fill in required fields');\r\n        } else {\r\n            if (after) {\r\n                status = 'Coming Soon';\r\n                console.log(status);\r\n                console.log(releaseDate);\r\n                console.log(duration);\r\n                console.log(endDate);\r\n                dispatch(\r\n                    addMovie(\r\n                        movie.movieTitle,\r\n                        movie.mainCast,\r\n                        movie.director,\r\n                        movie.language,\r\n                        movie.genre,\r\n                        duration,\r\n                        movie.rating,\r\n                        movie.movieSynopsis,\r\n                        releaseDate,\r\n                        endDate,\r\n                        cinemaNumber,\r\n                        startTime,\r\n                        endTime,\r\n                        status\r\n                    )\r\n                );\r\n            } else {\r\n                status = 'Now Showing';\r\n                console.log(status);\r\n                console.log(releaseDate);\r\n                console.log(duration);\r\n                console.log(endDate);\r\n                dispatch(\r\n                    addMovie(\r\n                        movie.movieTitle,\r\n                        movie.mainCast,\r\n                        movie.director,\r\n                        movie.language,\r\n                        movie.genre,\r\n                        duration,\r\n                        movie.rating,\r\n                        movie.movieSynopsis,\r\n                        releaseDate,\r\n                        endDate,\r\n                        cinemaNumber,\r\n                        startTime,\r\n                        endTime,\r\n                        status\r\n                    )\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {loading && <Loader>Loading</Loader>}\r\n            {userInfo ? (\r\n                <div>\r\n                    {movie.movieTitle ? (\r\n                        <Container fluid className='admin-main'>\r\n                            <Row className='h-100' fluid>\r\n                                <Col sm={2} className='admin-sidebar'>\r\n                                    <ListGroup\r\n                                        as='ul'\r\n                                        className='pl-1 pt-5 sidebar-content'\r\n                                    >\r\n                                        <Link to='/admin'>\r\n                                            <ListGroup.Item as='li'>\r\n                                                <span>\r\n                                                    <i className='fas fa-clipboard' />{' '}\r\n                                                    Dashboard\r\n                                                </span>\r\n                                            </ListGroup.Item>\r\n                                        </Link>\r\n                                        <Link to='/userlist'>\r\n                                            <ListGroup.Item as='li'>\r\n                                                <span>\r\n                                                    <i className='fas fa-users' />\r\n                                                    Users\r\n                                                </span>\r\n                                            </ListGroup.Item>\r\n                                        </Link>\r\n                                        <ListGroup.Item as='li' active>\r\n                                            <span>\r\n                                                <i className='fas fa-film' />{' '}\r\n                                                Movies\r\n                                            </span>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item as='li'>\r\n                                            <span>\r\n                                                <i className='fas fa-shopping-cart' />\r\n                                                Bookings\r\n                                            </span>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col sm={10} className='admin-main-col'>\r\n                                    <Container>\r\n                                        <Row className='add-movie-steps'>\r\n                                            <Col className='add-btn'>\r\n                                                <h5>Step 1</h5>\r\n                                                <i className='fas fa-video'></i>\r\n                                                <p>Movie information</p>\r\n                                            </Col>\r\n                                            <Col className='active-add add-btn'>\r\n                                                <h5>Step 2</h5>\r\n                                                <i className='fas fa-ticket-alt'></i>\r\n                                                <p>Cinema information</p>\r\n                                            </Col>\r\n                                            <Col className='inactive-add add-btn'>\r\n                                                <h5>Step 3</h5>\r\n                                                <i className='fas fa-images'></i>\r\n                                                <p>Movie Posters</p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            {message && (\r\n                                                <div className='message-box add-movie-error'>\r\n                                                    <Message>{message}</Message>\r\n                                                </div>\r\n                                            )}\r\n                                            {error && (\r\n                                                <div className='message-box add-movie-error'>\r\n                                                    <Message variant='danger'>\r\n                                                        {error}\r\n                                                    </Message>\r\n                                                </div>\r\n                                            )}\r\n                                            <Form className='mt-5 ml-5'>\r\n                                                <Row className='add-movie-form'>\r\n                                                    <Col>\r\n                                                        <Form.Group controlId='formBasicEmail'>\r\n                                                            <Form.Label className='form-label'>\r\n                                                                Release Date\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type='date'\r\n                                                                placeholder=' Release Date'\r\n                                                                className='form-control'\r\n                                                                value={release}\r\n                                                                onChange={(e) =>\r\n                                                                    setRelease(\r\n                                                                        e.target\r\n                                                                            .value\r\n                                                                    )\r\n                                                                }\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group controlId='formBasicEmail'>\r\n                                                            <Form.Label className='form-label'>\r\n                                                                End Screening\r\n                                                                Date\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type='date'\r\n                                                                placeholder='End Screening Date'\r\n                                                                className='form-control'\r\n                                                                value={\r\n                                                                    endScreening\r\n                                                                }\r\n                                                                onChange={(e) =>\r\n                                                                    setEndScreening(\r\n                                                                        e.target\r\n                                                                            .value\r\n                                                                    )\r\n                                                                }\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group controlId='formBasicEmail'>\r\n                                                            <Form.Label className='form-label'>\r\n                                                                Cinema Number\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type='number'\r\n                                                                placeholder='Cinema Number'\r\n                                                                className='form-control'\r\n                                                                value={\r\n                                                                    cinemaNumber\r\n                                                                }\r\n                                                                onChange={(e) =>\r\n                                                                    setCinemaNumber(\r\n                                                                        e.target\r\n                                                                            .value\r\n                                                                    )\r\n                                                                }\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Form.Group controlId='formBasicEmail'>\r\n                                                            <Form.Label className='form-label'>\r\n                                                                Start Time\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type='time'\r\n                                                                placeholder='Start Time'\r\n                                                                className='form-control'\r\n                                                                value={\r\n                                                                    startTime\r\n                                                                }\r\n                                                                onChange={(e) =>\r\n                                                                    setStartTime(\r\n                                                                        e.target\r\n                                                                            .value\r\n                                                                    )\r\n                                                                }\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group controlId='formBasicEmail'>\r\n                                                            <Form.Label className='form-label'>\r\n                                                                End Time\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type='time'\r\n                                                                placeholder='End Time'\r\n                                                                className='form-control'\r\n                                                                value={endTime}\r\n                                                                onChange={(e) =>\r\n                                                                    setEndTime(\r\n                                                                        e.target\r\n                                                                            .value\r\n                                                                    )\r\n                                                                }\r\n                                                            />\r\n                                                        </Form.Group>\r\n\r\n                                                        <div className='form-submit-btn mt-5'>\r\n                                                            <Button\r\n                                                                variant='primary'\r\n                                                                type='submit'\r\n                                                                className='form-submit'\r\n                                                                onClick={\r\n                                                                    submitHandler\r\n                                                                }\r\n                                                            >\r\n                                                                Submit\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Row>\r\n                                    </Container>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    ) : (\r\n                        <Redirect to='/movie-add'></Redirect>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <Redirect to='/login'></Redirect>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CinemaDetailsScreen;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Movie\\AddMovie\\MovieEditScreen.js",["198","199"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Container, Form, ListGroup, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Message from '../../../../components/Message';\r\nimport Loader from '../../../../components/Loader';\r\nimport { updateMovie } from '../../../../actions/movieAction';\r\nimport {\r\n    MOVIE_DETAILS_RESET,\r\n    MOVIE_UPDATE_RESET,\r\n} from '../../../../constants/movieConstant';\r\n\r\nconst MovieEditScreen = ({ history, match }) => {\r\n    const movieId = match.params.id;\r\n\r\n    const [movieTitle, setMovieTitle] = useState('');\r\n    const [mainCast, setMainCast] = useState('');\r\n    const [director, setDirector] = useState('');\r\n    const [language, setLanguage] = useState('');\r\n    const [genre, setGenre] = useState('');\r\n    const [rating, setRating] = useState('');\r\n    const [movieSynopsis, setMovieSynopsis] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const movieDetails = useSelector((state) => state.movieDetails);\r\n    const { loading, error, movie } = movieDetails;\r\n\r\n    const movieUpdate = useSelector((state) => state.movieUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = movieUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: MOVIE_UPDATE_RESET });\r\n            history.push('/movielist');\r\n        } else {\r\n            setMovieTitle(movie.movieTitle);\r\n            setMainCast(movie.mainCast);\r\n            setDirector(movie.director);\r\n            setLanguage(movie.language);\r\n            setGenre(movie.genre);\r\n            setRating(movie.rating);\r\n            setMovieSynopsis(movie.movieSynopsis);\r\n        }\r\n    }, [dispatch, history, movieId, movie, successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            movieTitle.length === 0 ||\r\n            mainCast.length === 0 ||\r\n            director.length === 0 ||\r\n            language.length === 0 ||\r\n            genre.length === 0 ||\r\n            rating.length === 0 ||\r\n            movieSynopsis.length === 0\r\n        ) {\r\n            setMessage('Please fill in required fields');\r\n        } else {\r\n            dispatch(\r\n                updateMovie({\r\n                    _id: movieId,\r\n                    movieTitle,\r\n                    mainCast,\r\n                    director,\r\n                    language,\r\n                    genre,\r\n                    rating,\r\n                    movieSynopsis,\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    const backHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: MOVIE_DETAILS_RESET });\r\n        history.push('/movielist');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {loading && <Loader>Loading</Loader>}\r\n            {userInfo ? (\r\n                <Container fluid className='admin-main'>\r\n                    <Row className='h-100' fluid>\r\n                        <Col sm={2} className='admin-sidebar'>\r\n                            <ListGroup\r\n                                as='ul'\r\n                                className='pl-1 pt-5 sidebar-content'\r\n                            >\r\n                                <Link to='/admin'>\r\n                                    <ListGroup.Item as='li'>\r\n                                        <span>\r\n                                            <i className='fas fa-clipboard' />{' '}\r\n                                            Dashboard\r\n                                        </span>\r\n                                    </ListGroup.Item>\r\n                                </Link>\r\n                                <Link to='/userlist'>\r\n                                    <ListGroup.Item as='li'>\r\n                                        <span>\r\n                                            <i className='fas fa-users' />\r\n                                            Users\r\n                                        </span>\r\n                                    </ListGroup.Item>\r\n                                </Link>\r\n                                <ListGroup.Item as='li' active>\r\n                                    <span>\r\n                                        <i className='fas fa-film' /> Movies\r\n                                    </span>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item as='li'>\r\n                                    <span>\r\n                                        <i className='fas fa-shopping-cart' />\r\n                                        Bookings\r\n                                    </span>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col sm={10} className='admin-main-col'>\r\n                            <Container>\r\n                                <Row className='add-movie-steps'>\r\n                                    <Col className='info-btn'>\r\n                                        <i className='fas fa-video'></i>\r\n                                        <p>Movie information</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Button\r\n                                    variant='primary'\r\n                                    type='submit'\r\n                                    className='form-submit'\r\n                                    onClick={backHandler}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n                                <Row>\r\n                                    {message && (\r\n                                        <div className='message-box add-movie-error'>\r\n                                            <Message>{message}</Message>\r\n                                        </div>\r\n                                    )}\r\n                                    {error && (\r\n                                        <div className='message-box add-movie-error'>\r\n                                            <Message variant='danger'>\r\n                                                {error}\r\n                                            </Message>\r\n                                        </div>\r\n                                    )}\r\n                                    <Form className='mt-1 ml-5'>\r\n                                        <Row className='add-movie-form'>\r\n                                            <Col>\r\n                                                <Form.Group controlId='formBasicEmail'>\r\n                                                    <Form.Label className='form-label'>\r\n                                                        Movie Title\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        type='text'\r\n                                                        placeholder='Movie Title'\r\n                                                        className='form-control'\r\n                                                        value={movieTitle}\r\n                                                        onChange={(e) =>\r\n                                                            setMovieTitle(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId='formBasicEmail'>\r\n                                                    <Form.Label className='form-label'>\r\n                                                        Main Cast\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        type='text'\r\n                                                        placeholder='Main Cast'\r\n                                                        className='form-control'\r\n                                                        value={mainCast}\r\n                                                        onChange={(e) =>\r\n                                                            setMainCast(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId='formBasicEmail'>\r\n                                                    <Form.Label className='form-label'>\r\n                                                        Director\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        type='text'\r\n                                                        placeholder='Director'\r\n                                                        className='form-control'\r\n                                                        value={director}\r\n                                                        onChange={(e) =>\r\n                                                            setDirector(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId='formBasicEmail'>\r\n                                                    <Form.Label className='form-label'>\r\n                                                        Movie Synopsis\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='textarea'\r\n                                                        placeholder='Movie Synopsis'\r\n                                                        className='form-control-synopsis'\r\n                                                        value={movieSynopsis}\r\n                                                        onChange={(e) =>\r\n                                                            setMovieSynopsis(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Form.Group controlId='formBasicEmail'>\r\n                                                    <Form.Label className='form-label'>\r\n                                                        Language\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        type='text'\r\n                                                        placeholder='Language'\r\n                                                        className='form-control'\r\n                                                        value={language}\r\n                                                        onChange={(e) =>\r\n                                                            setLanguage(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId='formBasicEmail'>\r\n                                                    <Form.Label className='form-label'>\r\n                                                        Genre\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        type='text'\r\n                                                        placeholder='Genre'\r\n                                                        className='form-control'\r\n                                                        value={genre}\r\n                                                        onChange={(e) =>\r\n                                                            setGenre(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId='formBasicEmail'>\r\n                                                    <Form.Label className='form-label'>\r\n                                                        Rating\r\n                                                    </Form.Label>\r\n                                                    <Form.Control\r\n                                                        type='text'\r\n                                                        placeholder='Rating'\r\n                                                        className='form-control'\r\n                                                        value={rating}\r\n                                                        onChange={(e) =>\r\n                                                            setRating(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <div className='form-submit-btn'>\r\n                                                    <Button\r\n                                                        variant='primary'\r\n                                                        type='submit'\r\n                                                        className='form-submit mt-4 '\r\n                                                        onClick={submitHandler}\r\n                                                    >\r\n                                                        Update\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Container>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            ) : (\r\n                <Redirect to='/login'></Redirect>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieEditScreen;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\AdminScreens\\Movie\\AddMovie\\MovieAddPoster.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\Default.js",[],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\ForgotPasswordScreens\\ChangePassword.js",["200"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    Image,\r\n    OverlayTrigger,\r\n    Row,\r\n    Tooltip,\r\n} from 'react-bootstrap';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { resetPassword } from '../../actions/userAction';\r\nimport Message from '../../components/Message';\r\n\r\nexport const ChangePassword = (props) => {\r\n    const history = useHistory();\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userEmailAuth = useSelector((state) => state.userEmailAuth);\r\n    const { user } = userEmailAuth;\r\n\r\n    const userUpdatePassword = useSelector((state) => state.userUpdatePassword);\r\n    const { loading, error, userUpdate } = userUpdatePassword;\r\n\r\n    useEffect(() => {\r\n        if (userUpdate) {\r\n            history.push('/login');\r\n        }\r\n    }, [history, userUpdate]);\r\n    const handleInput = (e) => {\r\n        e.preventDefault();\r\n        if (password.length === 0 || confirmPassword.length === 0) {\r\n            setMessage('Please fill in required fields');\r\n        } else {\r\n            if (password === confirmPassword) {\r\n                dispatch(resetPassword(user.email, password));\r\n            } else setMessage('Please fill in required fields');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Container className='login-form'>\r\n                <Row className='row-login'>\r\n                    <Col sm={5} className='col-1-login'>\r\n                        <div className='d-flex flex-column login-col-1'>\r\n                            <Image\r\n                                src='/images/logo.png'\r\n                                className='login-logo'\r\n                            />\r\n                            <span className='col-info'>\r\n                                Enter your personal details and start journey\r\n                                with us\r\n                            </span>\r\n                            <Link to='/register' className='button-style'>\r\n                                <span className='col-button'>Register</span>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm={7} className='col-2-login'>\r\n                        <div>\r\n                            {message && (\r\n                                <div className='message-box'>\r\n                                    <Message>{message}</Message>\r\n                                </div>\r\n                            )}\r\n                            {error && (\r\n                                <div className='message-box'>\r\n                                    <Message variant='danger'>{error}</Message>\r\n                                </div>\r\n                            )}\r\n                            {user ? (\r\n                                <Form className='form-holder'>\r\n                                    <Form.Group>\r\n                                        <Form.Label className='form-label'>\r\n                                            Password\r\n                                        </Form.Label>\r\n                                        <OverlayTrigger\r\n                                            key='bottom'\r\n                                            placement='bottom'\r\n                                            overlay={\r\n                                                <Tooltip\r\n                                                    id={`tooltip-$'bottom'`}\r\n                                                >\r\n                                                    This field is required.\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <Form.Control\r\n                                                type='password'\r\n                                                placeholder='Enter password'\r\n                                                className='form-control'\r\n                                                value={password}\r\n                                                onChange={(e) =>\r\n                                                    setPassword(e.target.value)\r\n                                                }\r\n                                            />\r\n                                        </OverlayTrigger>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label className='form-label'>\r\n                                            Confirm Password\r\n                                        </Form.Label>\r\n                                        <OverlayTrigger\r\n                                            key='bottom'\r\n                                            placement='bottom'\r\n                                            overlay={\r\n                                                <Tooltip\r\n                                                    id={`tooltip-$'bottom'`}\r\n                                                >\r\n                                                    This field is required.\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <Form.Control\r\n                                                type='password'\r\n                                                placeholder='Confirm password'\r\n                                                className='form-control'\r\n                                                value={confirmPassword}\r\n                                                onChange={(e) =>\r\n                                                    setConfirmPassword(\r\n                                                        e.target.value\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </OverlayTrigger>\r\n                                    </Form.Group>\r\n\r\n                                    <Button\r\n                                        variant='primary'\r\n                                        type='submit'\r\n                                        className='form-submit'\r\n                                        onClick={handleInput}\r\n                                    >\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form>\r\n                            ) : (\r\n                                <Redirect to='/login'></Redirect>\r\n                            )}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;\r\n","D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\screens\\MovieScreen.js",["201","202"],"D:\\3rd Year - Files\\Systems Integration and Architecture\\Website\\scrumbug\\frontend\\src\\components\\Rating.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":24,"column":13,"nodeType":"209","messageId":"210","endLine":24,"endColumn":20},{"ruleId":"207","severity":1,"message":"208","line":30,"column":13,"nodeType":"209","messageId":"210","endLine":30,"endColumn":20},{"ruleId":"207","severity":1,"message":"208","line":31,"column":13,"nodeType":"209","messageId":"210","endLine":31,"endColumn":20},{"ruleId":"207","severity":1,"message":"208","line":31,"column":13,"nodeType":"209","messageId":"210","endLine":31,"endColumn":20},{"ruleId":"207","severity":1,"message":"211","line":10,"column":8,"nodeType":"209","messageId":"210","endLine":10,"endColumn":15},{"ruleId":"207","severity":1,"message":"212","line":13,"column":12,"nodeType":"209","messageId":"210","endLine":13,"endColumn":19},{"ruleId":"207","severity":1,"message":"213","line":13,"column":21,"nodeType":"209","messageId":"210","endLine":13,"endColumn":31},{"ruleId":"207","severity":1,"message":"214","line":21,"column":22,"nodeType":"209","messageId":"210","endLine":21,"endColumn":27},{"ruleId":"207","severity":1,"message":"214","line":17,"column":22,"nodeType":"209","messageId":"210","endLine":17,"endColumn":27},{"ruleId":"207","severity":1,"message":"215","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":16},{"ruleId":"207","severity":1,"message":"214","line":11,"column":22,"nodeType":"209","messageId":"210","endLine":11,"endColumn":27},{"ruleId":"207","severity":1,"message":"216","line":9,"column":5,"nodeType":"209","messageId":"210","endLine":9,"endColumn":10},{"ruleId":"207","severity":1,"message":"217","line":13,"column":22,"nodeType":"209","messageId":"210","endLine":13,"endColumn":36},{"ruleId":"207","severity":1,"message":"214","line":32,"column":22,"nodeType":"209","messageId":"210","endLine":32,"endColumn":27},{"ruleId":"207","severity":1,"message":"218","line":36,"column":18,"nodeType":"209","messageId":"210","endLine":36,"endColumn":31},{"ruleId":"207","severity":1,"message":"219","line":37,"column":16,"nodeType":"209","messageId":"210","endLine":37,"endColumn":27},{"ruleId":"207","severity":1,"message":"214","line":14,"column":22,"nodeType":"209","messageId":"210","endLine":14,"endColumn":27},{"ruleId":"207","severity":1,"message":"220","line":30,"column":5,"nodeType":"209","messageId":"210","endLine":30,"endColumn":28},{"ruleId":"207","severity":1,"message":"221","line":10,"column":5,"nodeType":"209","messageId":"210","endLine":10,"endColumn":24},{"ruleId":"207","severity":1,"message":"222","line":11,"column":5,"nodeType":"209","messageId":"210","endLine":11,"endColumn":23},{"ruleId":"207","severity":1,"message":"218","line":35,"column":18,"nodeType":"209","messageId":"210","endLine":35,"endColumn":31},{"ruleId":"207","severity":1,"message":"219","line":36,"column":16,"nodeType":"209","messageId":"210","endLine":36,"endColumn":27},{"ruleId":"207","severity":1,"message":"208","line":29,"column":13,"nodeType":"209","messageId":"210","endLine":29,"endColumn":20},{"ruleId":"207","severity":1,"message":"211","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":15},{"ruleId":"207","severity":1,"message":"214","line":140,"column":22,"nodeType":"209","messageId":"210","endLine":140,"endColumn":27},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'Message' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'error' is assigned a value but never used.","'Button' is defined but never used.","'Table' is defined but never used.","'getUserDetails' is defined but never used.","'loadingUpdate' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","'MOVIE_SEAT_UPDATE_RESET' is defined but never used.","'MOVIE_DETAILS_RESET' is defined but never used.","'MOVIE_UPDATE_RESET' is defined but never used.","no-global-assign","no-unsafe-negation"]